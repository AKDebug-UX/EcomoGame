{"version":3,"sources":["image/welcome.jpeg","components/OnboardingScreen/Onboarding.js","levels/Start.js","image/bird1.jpg","image/bird2.jpg","image/bird3.jpg","components/Stage1/data.js","components/Header/index.js","image/backpic.jpg","components/Stage1/Card/index.js","components/Stage1/Finish/Index.js","levels/Stage1.js","components/Stage2/data.js","image/bird4.jpg","components/Stage2/Card/index.js","components/Stage2/Finish/Index.js","levels/Stage2.js","lib/MessagePopup.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","body","padding","inputBox","width","submitButton","stage1","top","marginLeft","welcome","height","content","marginRight","color","ecomogame","Onboarding","props","React","useState","open","setOpen","classes","navigate","useNavigate","className","style","display","Modal","onClose","position","border","backgroundColor","boxShadow","margin","Button","variant","onClick","location","console","log","Grid","item","ErrorPage","container","direction","alignItems","justify","minHeight","Typography","Login","userName","setUserName","password","setPassword","type","value","onChange","e","target","required","uniqueCardsArray","image","IMG1","IMG2","IMG3","Header","moves","bestScore","handleRestart","Container","localStorage","getItem","Card","card","index","isInactive","isFlipped","isDisabled","classnames","src","backpic","alt","Finish","showModal","Dialog","disableBackdropClick","disableEscapeKeyDown","DialogTitle","id","DialogContent","DialogContentText","DialogActions","swap","array","i","j","temp","shuffleCards","length","Math","floor","random","App","concat","cards","setCards","openCards","setOpencards","matchedCards","setMatchedcards","setMoves","setShowModal","shouldDisableAllCards","setShouldDisableAllCards","JSON","parse","Number","POSITIVE_INFINITY","setBestScore","timeout","useRef","evaluate","first","second","prev","current","setTimeout","handleCardClick","clearTimeout","useEffect","Object","keys","highScore","min","setItem","checkCompletion","checkIsFlipped","includes","checkIsInactive","Boolean","Row","map","Col","xs","md","lg","MessagePopup","handleClose","event","reason","Snackbar","autoHideDuration","Alert","severity","message","SetPopupContext","createContext","loading","setLoading","popup","setPopup","Provider","exact","path","element","Stage1","Stage2","status","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32256b44.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/welcome.caa024c1.jpeg\";","import React, { useEffect, useRef, useState } from \"react\";\nimport { Grid, Typography, Button, makeStyles } from \"@material-ui/core\";\nimport \"./Onboarding.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Modal from '@material-ui/core/Modal';\nimport welcome from \"../../image/welcome.jpeg\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"10px 10px\",\n  },\n  inputBox: {\n    width: \"300px\",\n  },\n  submitButton: {\n    width: \"300px\",\n  },\n  stage1: {\n    width: \"300px\",\n    top: \"145px\",\n    marginLeft: \"20px\",\n  },\n  welcome: {\n    height: \"0px\",\n    width: \"10px\",\n    top: \"0px\",\n    marginLeft: \"60px\",\n  },\n\n  content: {\n    marginLeft: \"30px\",\n    marginRight: \"30px\",\n    color: \"white\",\n  },\n  ecomogame: {\n    marginLeft: \"30px\",\n    marginRight: \"30px\",\n    color: \"rgb(30, 255, 0)\",\n  },\n}));\n\nexport default function Onboarding(props) {\n  const [open, setOpen] = React.useState(false);\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n    \n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const classes = useStyles();\n  let navigate = useNavigate();\n  const handleClick = (location) => {\n    console.log(location);\n    navigate(location);\n  };\n  return (\n    <div className=\"all\">\n      <div className=\"top\">\n        <p className=\"p\">🧩</p>\n        <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\n        <div>\n          <p className=\"EcomoGame\">EcomoGame</p>\n        </div>\n        <p className={classes.content}>\n         The EcomoGame is a simple game to test the player’s memory. \n         In a deck of paired cards, the player needs to select a matching\n         pair in consecutive turns. \n         The player wins the game when all matching pairs are selected.\n        </p>\n      </div>\n\n      <div className=\"bottom\">\n      <div style={{ display: 'block', padding: 30 }}>\n      <Modal\n        onClose={handleClose}\n        open={open}\n        style={{\n          position: 'absolute',\n          border: '2px solid rgb(30, 255, 0)',\n          backgroundColor: 'gray',\n          boxShadow: '2px solid black',\n          height:200,\n          width: 340,\n          margin: 'auto'\n        }}\n      >\n        <h2>\n        <div className={classes.welcome}>\n            <p className=\"loader-wel\">welcome</p>\n            <p className=\"to\">to</p>\n            <p className=\"name\">EcomoGame</p>\n        </div>\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.stage1}\n            onClick={() => handleClick(\"/stage1\")}>\n              Get Started</Button>\n          \n        </h2>\n      </Modal>\n    </div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submitButton}\n          onClick={handleOpen}\n        >\n          START\n        </Button>\n      </div>\n      <Grid item></Grid>\n    </div>\n  );\n};\nexport const ErrorPage = (props) => {\n  return (\n    <Grid\n      container\n      item\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\n    >\n      <Grid item>\n        <Typography variant=\"h2\">Error 404</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n","import {useNavigate} from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nfunction authenticateUser(userName, password) {\r\n\r\n}\r\n\r\nexport default function Login(props) {\r\n\r\n  //Creating a state variable\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n    const handleClick = (location) => {\r\n      console.log(location);\r\n      navigate(location);\r\n      authenticateUser(userName, password)\r\n    };\r\n  \r\n\r\n  return (\r\n\r\n    <div>\r\n       <input type=\"text\" value={userName} onChange={(e) => {\r\n              setUserName(e.target.value);\r\n            }}   required\r\n        />\r\n\r\n      <input type=\"text\" value={password} onChange={(e) => {\r\n             setPassword(e.target.value);\r\n            }}   required\r\n      />\r\n\r\n      <button type=\"submit\" onClick={() => handleClick(\"/stage1\")}>\r\n                  \r\n            Log In\r\n      </button>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}","export default __webpack_public_path__ + \"static/media/bird1.991fa7ea.jpg\";","export default __webpack_public_path__ + \"static/media/bird2.b650830a.jpg\";","export default __webpack_public_path__ + \"static/media/bird3.8063cae8.jpg\";","import IMG1 from \"../../image/bird1.jpg\";\nimport IMG2 from \"../../image/bird2.jpg\";\nimport IMG3 from \"../../image/bird3.jpg\";\n// import IMG4 from \"../../image/bird4.jpg\";\n// import IMG5 from \"../../image/bird5.jpg\";\n// import IMG6 from \"../../image/bird6.jpg\";\n// import IMG7 from \"../../image/bird7.png\";\n// import IMG8 from \"../../image/bird8.jpg\";\n// import IMG9 from \"../../image/bird9.jpg\";\n\nconst uniqueCardsArray = [\n  {\n    type: \"bird1\",\n    image: IMG1,\n  },\n  {\n    type: \"bird2\",\n    image: IMG2,\n  },\n  {\n    type: \"bird3\",\n    image: IMG3,\n  },\n  // {\n  //   type: \"bird4\",\n  //   image: IMG4,\n  // },\n  // {\n  //   type: \"bird5\",\n  //   image: IMG5,\n  // },\n  // {\n  //   type: \"bird6\",\n  //   image: IMG6,\n  // },\n  // {\n  //   type: \"bird7\",\n  //   image: IMG7,\n  // },\n  // {\n  //   type: \"bird8\",\n  //   image: IMG8,\n  // },\n  // {\n  //   type: \"bird9\",\n  //   image: IMG9,\n  // },\n];\n\nexport default uniqueCardsArray;\n","import React from \"react\";\nimport \"./header.css\";\nimport { Container } from \"react-bootstrap\";\nimport { FaRedo } from \"react-icons/fa\";\n\nconst Header = ({ moves, bestScore, handleRestart }) => {\n  return (\n    <div>\n      <div className=\"Ecomo\">\n          <p className=\"Ecomog\">EcomoGame</p>\n      </div>\n      <br/><br/>\n      <Container>\n        <div className=\"sub-header\">\n          <div className=\"moves\">\n            <span className=\"bold\">Moves:</span>\n            {moves}\n          </div>\n          <div className=\"reshuffle\">\n            <button onClick={handleRestart}>\n              <FaRedo />\n            </button>\n          </div>\n          {localStorage.getItem(\"bestScore\") && (\n            <div className=\"high-score\">\n              <span>Best Score:</span>\n              {bestScore}\n            </div>\n          )}\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/backpic.6399890d.jpg\";","import React from \"react\";\nimport \"./card.css\";\nimport backpic from \"../../../image/backpic.jpg\";\n// import frontpic from \"../../image/bird1.jpg\";\nimport classnames from \"classnames\";\n\nconst Card = ({ onClick, card, index, isInactive, isFlipped, isDisabled }) => {\n  const handleClick = () => {\n    !isFlipped && !isDisabled && onClick(index);\n  };\n  return (\n    <div\n      className={classnames(\"card\", {\n        \"is-flipped\": isFlipped,\n        \"is-inactive\": isInactive,\n      })}\n      onClick={handleClick}\n    >\n      <div className=\"card-face card-font-face\">\n        <img src={backpic} alt=\"backpic\" className=\"img\" />\n      </div>\n      <div className=\"card-face card-back-face\">\n        <img src={card.image} alt=\"frontpic\" className=\"img\" />\n      </div>\n    </div>\n  );\n};\nexport default Card;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport \"./finish.css\";\nimport { useNavigate } from \"react-router-dom\";\n\n\n\nconst Finish = ({ handleRestart, showModal, bestScore, moves }) => {\n  let navigate = useNavigate();\n  const handleClick = (location) => {\n    console.log(location);\n    navigate(location);\n  };\n  return (\n    <div>\n      \n      <Dialog\n        open={showModal}\n        disableBackdropClick\n        disableEscapeKeyDown\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <div className=\"Ecomo\">\n          <p className=\"Ecomog\">EcomoGame</p>\n      </div>\n        <DialogTitle id=\"alert-dialog-title\">\n          Hurray !!! You completed the EcomoGame Stage 1 !!\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            You got {moves} moves. Your best score is {bestScore}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleRestart} color=\"primary\">Restart </Button>\n          <Button onClick={() => handleClick(\"/stage2\")} color=\"primary\">Next Stage</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Finish;\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport uniqueCardsArray from \"../../src/components/Stage1/data\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Header from \"../components/Header\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport Card from \"../components/Stage1/Card/index\";\r\nimport Finish from \"../components/Stage1/Finish/Index\";\r\n\r\n\r\n// FisherYates Modern Shuffle Algorithm\r\nfunction swap(array, i, j) {\r\n  const temp = array[i];\r\n  array[i] = array[j];\r\n  array[j] = temp;\r\n}\r\nfunction shuffleCards(array) {\r\n  const length = array.length;\r\n  for (let i = length; i > 0; i--) {\r\n    const randomIndex = Math.floor(Math.random() * i);\r\n    const currentIndex = i - 1;\r\n    swap(array, currentIndex, randomIndex);\r\n  }\r\n  return array;\r\n}\r\n\r\nconst App = () => {\r\n  const [cards, setCards] = useState(() =>\r\n    shuffleCards(uniqueCardsArray.concat(uniqueCardsArray))\r\n  );\r\n  const [openCards, setOpencards] = useState([]);\r\n  const [matchedCards, setMatchedcards] = useState({});\r\n  const [moves, setMoves] = useState(0);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [shouldDisableAllCards, setShouldDisableAllCards] = useState(false);\r\n  const [bestScore, setBestScore] = useState(\r\n    JSON.parse(localStorage.getItem(\"bestScore\")) || Number.POSITIVE_INFINITY\r\n  );\r\n  const timeout = useRef(null);\r\n\r\n  const disable = () => {\r\n    setShouldDisableAllCards(true);\r\n  };\r\n\r\n  const enable = () => {\r\n    setShouldDisableAllCards(false);\r\n  };\r\n\r\n  const checkCompletion = () => {\r\n    if (Object.keys(matchedCards).length === uniqueCardsArray.length) {\r\n      setShowModal(true);\r\n      const highScore = Math.min(moves, bestScore);\r\n      setBestScore(highScore);\r\n      localStorage.setItem(\"bestScore\", highScore);\r\n    }\r\n  };\r\n\r\n  const evaluate = () => {\r\n    const [first, second] = openCards;\r\n    enable();\r\n    if (cards[first].type === cards[second].type) {\r\n      setMatchedcards((prev) => ({ ...prev, [cards[first].type]: true }));\r\n      setOpencards([]);\r\n      // alert(\"you have found a match\");\r\n      return;\r\n    }\r\n    timeout.current = setTimeout(() => {\r\n      setOpencards([]);\r\n    }, 300);\r\n  };\r\n\r\n  const handleCardClick = (index) => {\r\n    if (openCards.length === 1) {\r\n      setOpencards((prev) => [...prev, index]);\r\n      setMoves((moves) => moves + 1);\r\n      disable();\r\n    } else {\r\n      clearTimeout(timeout.current);\r\n      setOpencards([index]);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let timeout = null;\r\n    if (openCards.length === 2) {\r\n      timeout = setTimeout(evaluate, 300);\r\n    }\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [openCards]);\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    checkCompletion();\r\n    // eslint-disable-next-line\r\n  }, [matchedCards]);\r\n\r\n  const checkIsFlipped = (index) => {\r\n    return openCards.includes(index);\r\n  };\r\n  const checkIsInactive = (card) => {\r\n    return Boolean(matchedCards[card.type]);\r\n  };\r\n  const handleRestart = () => {\r\n    setMatchedcards({});\r\n    setOpencards([]);\r\n    setShowModal(false);\r\n    setMoves(0);\r\n    setShouldDisableAllCards(false);\r\n    setCards(shuffleCards(uniqueCardsArray.concat(uniqueCardsArray)));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Header\r\n        moves={moves}\r\n        bestScore={bestScore}\r\n        handleRestart={handleRestart}\r\n      />\r\n      \r\n      <Container>\r\n        <h5>STAGE: ONE(1)</h5>\r\n        <Row>\r\n          {cards.map((card, index) => {\r\n            return (\r\n              <Col xs={4} md={3} lg={2}>\r\n                <Card\r\n                  key={index}\r\n                  card={card}\r\n                  index={index}\r\n                  isDisabled={shouldDisableAllCards}\r\n                  isInactive={checkIsInactive(card)}\r\n                  isFlipped={checkIsFlipped(index)}\r\n                  onClick={handleCardClick}\r\n                />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n      <Finish\r\n        showModal={showModal}\r\n        moves={moves}\r\n        bestScore={bestScore}\r\n        handleRestart={handleRestart}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import IMG1 from \"../../image/bird1.jpg\";\nimport IMG2 from \"../../image/bird2.jpg\";\nimport IMG3 from \"../../image/bird3.jpg\";\nimport IMG4 from \"../../image/bird4.jpg\";\n// import IMG5 from \"../../image/bird5.jpg\";\n// import IMG6 from \"../../image/bird6.jpg\";\n// import IMG7 from \"../../image/bird7.png\";\n// import IMG8 from \"../../image/bird8.jpg\";\n// import IMG9 from \"../../image/bird9.jpg\";\n\nconst uniqueCardsArray = [\n  {\n    type: \"bird1\",\n    image: IMG1,\n  },\n  {\n    type: \"bird2\",\n    image: IMG2,\n  },\n  {\n    type: \"bird3\",\n    image: IMG3,\n  },\n  {\n    type: \"bird4\",\n    image: IMG4,\n  },\n  // {\n  //   type: \"bird5\",\n  //   image: IMG5,\n  // },\n  // {\n  //   type: \"bird6\",\n  //   image: IMG6,\n  // },\n  // {\n  //   type: \"bird7\",\n  //   image: IMG7,\n  // },\n  // {\n  //   type: \"bird8\",\n  //   image: IMG8,\n  // },\n  // {\n  //   type: \"bird9\",\n  //   image: IMG9,\n  // },\n];\n\nexport default uniqueCardsArray;\n","export default __webpack_public_path__ + \"static/media/bird4.fb67c4c8.jpg\";","import React from \"react\";\nimport \"./style.css\";\nimport backpic from \"../../../image/backpic.jpg\";\n// import frontpic from \"../../image/bird1.jpg\";\nimport classnames from \"classnames\";\n\nconst Card = ({ onClick, card, index, isInactive, isFlipped, isDisabled }) => {\n  const handleClick = () => {\n    !isFlipped && !isDisabled && onClick(index);\n  };\n  return (\n    <div\n      className={classnames(\"card\", {\n        \"is-flipped\": isFlipped,\n        \"is-inactive\": isInactive,\n      })}\n      onClick={handleClick}\n    >\n      <div className=\"card-face card-font-face\">\n        <img src={backpic} alt=\"backpic\" className=\"img\" />\n      </div>\n      <div className=\"card-face card-back-face\">\n        <img src={card.image} alt=\"frontpic\" className=\"img\" />\n      </div>\n    </div>\n  );\n};\nexport default Card;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport \"./style.css\";\nimport { useNavigate } from \"react-router-dom\";\n\n\n\nconst Finish = ({ handleRestart, showModal, bestScore, moves }) => {\n  let navigate = useNavigate();\n  const handleClick = (location) => {\n    console.log(location);\n    navigate(location);\n  };\n  return (\n    <div>\n      \n      <Dialog\n        open={showModal}\n        disableBackdropClick\n        disableEscapeKeyDown\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <h2>Ecomo Game</h2>\n        <DialogTitle id=\"alert-dialog-title\">\n          Hurray !!! You completed the Ecomo Game  !!\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            You got {moves} moves. Your best score is {bestScore}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleRestart} color=\"primary\">Restart </Button>\n          <Button onClick={() => handleClick(\"/stage2\")} color=\"primary\">Next Stage</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Finish;\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport uniqueCardsArray from \"../../src/components/Stage2/data\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Header from \"../components/Header\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport Card from \"../components/Stage2/Card/index\";\r\nimport Finish from \"../components/Stage2/Finish/Index\";\r\n\r\n\r\n// FisherYates Modern Shuffle Algorithm\r\nfunction swap(array, i, j) {\r\n  const temp = array[i];\r\n  array[i] = array[j];\r\n  array[j] = temp;\r\n}\r\nfunction shuffleCards(array) {\r\n  const length = array.length;\r\n  for (let i = length; i > 0; i--) {\r\n    const randomIndex = Math.floor(Math.random() * i);\r\n    const currentIndex = i - 1;\r\n    swap(array, currentIndex, randomIndex);\r\n  }\r\n  return array;\r\n}\r\n\r\nconst App = () => {\r\n  const [cards, setCards] = useState(() =>\r\n    shuffleCards(uniqueCardsArray.concat(uniqueCardsArray))\r\n  );\r\n  const [openCards, setOpencards] = useState([]);\r\n  const [matchedCards, setMatchedcards] = useState({});\r\n  const [moves, setMoves] = useState(0);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [shouldDisableAllCards, setShouldDisableAllCards] = useState(false);\r\n  const [bestScore, setBestScore] = useState(\r\n    JSON.parse(localStorage.getItem(\"bestScore\")) || Number.POSITIVE_INFINITY\r\n  );\r\n  const timeout = useRef(null);\r\n\r\n  const disable = () => {\r\n    setShouldDisableAllCards(true);\r\n  };\r\n\r\n  const enable = () => {\r\n    setShouldDisableAllCards(false);\r\n  };\r\n\r\n  const checkCompletion = () => {\r\n    if (Object.keys(matchedCards).length === uniqueCardsArray.length) {\r\n      setShowModal(true);\r\n      const highScore = Math.min(moves, bestScore);\r\n      setBestScore(highScore);\r\n      localStorage.setItem(\"bestScore\", highScore);\r\n    }\r\n  };\r\n\r\n  const evaluate = () => {\r\n    const [first, second] = openCards;\r\n    enable();\r\n    if (cards[first].type === cards[second].type) {\r\n      setMatchedcards((prev) => ({ ...prev, [cards[first].type]: true }));\r\n      setOpencards([]);\r\n      // alert(\"you have found a match\");\r\n      return;\r\n    }\r\n    timeout.current = setTimeout(() => {\r\n      setOpencards([]);\r\n    }, 500);\r\n  };\r\n\r\n  const handleCardClick = (index) => {\r\n    if (openCards.length === 1) {\r\n      setOpencards((prev) => [...prev, index]);\r\n      setMoves((moves) => moves + 1);\r\n      disable();\r\n    } else {\r\n      clearTimeout(timeout.current);\r\n      setOpencards([index]);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let timeout = null;\r\n    if (openCards.length === 2) {\r\n      timeout = setTimeout(evaluate, 300);\r\n    }\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [openCards]);\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    checkCompletion();\r\n    // eslint-disable-next-line\r\n  }, [matchedCards]);\r\n\r\n  const checkIsFlipped = (index) => {\r\n    return openCards.includes(index);\r\n  };\r\n  const checkIsInactive = (card) => {\r\n    return Boolean(matchedCards[card.type]);\r\n  };\r\n  const handleRestart = () => {\r\n    setMatchedcards({});\r\n    setOpencards([]);\r\n    setShowModal(false);\r\n    setMoves(0);\r\n    setShouldDisableAllCards(false);\r\n    setCards(shuffleCards(uniqueCardsArray.concat(uniqueCardsArray)));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Header\r\n        moves={moves}\r\n        bestScore={bestScore}\r\n        handleRestart={handleRestart}\r\n      />\r\n      \r\n      <Container>\r\n        <h5>STAGE: TWO(2)</h5>\r\n        <Row>\r\n          {cards.map((card, index) => {\r\n            return (\r\n              <Col xs={4} md={3} lg={2}>\r\n                <Card\r\n                  key={index}\r\n                  card={card}\r\n                  index={index}\r\n                  isDisabled={shouldDisableAllCards}\r\n                  isInactive={checkIsInactive(card)}\r\n                  isFlipped={checkIsFlipped(index)}\r\n                  onClick={handleCardClick}\r\n                />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n      <Finish\r\n        showModal={showModal}\r\n        moves={moves}\r\n        bestScore={bestScore}\r\n        handleRestart={handleRestart}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { Snackbar, Slide } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nconst MessagePopup = (props) => {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    props.setOpen(false);\n  };\n  return (\n    <Snackbar open={props.open} onClose={handleClose} autoHideDuration={2000}>\n      <Alert onClose={handleClose} severity={props.severity}>\n        {props.message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default MessagePopup;","import React, { createContext, useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\n\nimport Onboarding, { ErrorPage } from \"./components/OnboardingScreen/Onboarding\";\nimport Start from \"./levels/Start\";\nimport Stage1 from \"./levels/Stage1\";\nimport Stage2 from \"./levels/Stage2\";\nimport MessagePopup from \"../src/lib/MessagePopup\";\nimport \"./App.css\";\n\n\nexport const SetPopupContext = createContext();\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 4000);\n  }, []);\n\n  const [popup, setPopup] = useState({\n    open: false,\n    severity: \"\",\n    message: \"\",\n  });\n  return (\n    <div className=\"con\">\n      {loading ? (\n        <div className=\"loader-con\">\n          <div className=\"spinner\">\n            <p className=\"loader-img\">🧩</p>\n          </div>\n        </div>\n      ) : (\n        <SetPopupContext.Provider value={setPopup}>\n          <Grid container direction=\"column\">\n            <Grid item xs></Grid>\n            <Grid item>\n              <Routes>\n                <Route exact path=\"/\" element={<Onboarding />} />\n                <Route exact path=\"/start\" element={<Start />} />\n                <Route exact path=\"/stage1\" element={<Stage1 />} />\n                <Route exact path=\"/stage2\" element={<Stage2 />} />\n                <Route path=\"*\" element={<ErrorPage />} />\n              </Routes>\n            </Grid>\n          </Grid>\n          <MessagePopup\n            open={popup.open}\n            setOpen={(status) =>\n              setPopup({\n                ...popup,\n                open: status,\n              })\n            }\n            severity={popup.severity}\n            message={popup.message}\n          />\n        </SetPopupContext.Provider>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n            <BrowserRouter>\n                <App />\n           </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}